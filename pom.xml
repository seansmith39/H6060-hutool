<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<packaging>pom</packaging>

	<groupId>cn.hutool</groupId>
	<artifactId>hutool-parent</artifactId>
	<version>5.8.27</version>
	<name>hutool</name>
	<description>Hutool是一个小而全的Java工具类库，通过静态方法封装，降低相关API的学习成本，提高工作效率，使Java拥有函数式语言般的优雅，让Java语言也可以“甜甜的”。</description>
	<url>https://github.com/dromara/hutool</url>

	<modules>
		<module>hutool-all</module>
		<module>hutool-bom</module>
		<module>hutool-aop</module>
		<module>hutool-bloomFilter</module>
		<module>hutool-cache</module>
		<module>hutool-core</module>
		<module>hutool-cron</module>
		<module>hutool-crypto</module>
		<module>hutool-db</module>
		<module>hutool-dfa</module>
		<module>hutool-extra</module>
		<module>hutool-http</module>
		<module>hutool-log</module>
		<module>hutool-script</module>
		<module>hutool-setting</module>
		<module>hutool-system</module>
		<module>hutool-json</module>
		<module>hutool-poi</module>
		<module>hutool-captcha</module>
		<module>hutool-socket</module>
		<module>hutool-jwt</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>utf-8</project.reporting.outputEncoding>

		<Automatic-Module-Name>cn.hutool</Automatic-Module-Name>

		<!-- versions -->
		<compile.version>8</compile.version>
		<junit.version>5.10.2</junit.version>
		<lombok.version>1.18.30</lombok.version>
	</properties>

	<dependencies>
		<!-- 全局单元测试 -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<issueManagement>
		<system>Github Issue</system>
		<url>https://github.com/dromara/hutool/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Mulan Permissive Software License，Version 2</name>
			<url>https://license.coscl.org.cn/MulanPSL2</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Looly</name>
			<email>loolly@gmail.com</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:git@github.com:dromara/hutool.git</connection>
		<developerConnection>scm:git@github.com:dromara/hutool.git</developerConnection>
		<url>git@github.com:dromara/hutool.git</url>
	</scm>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.7</version>
				<executions>
					<execution>
						<id>jacoco-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${compile.version}</source>
					<target>${compile.version}</target>
					<compilerArgument>-Xlint:unchecked</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-OS>${os.name}</Build-OS>
							<Built-By>${user.name}</Built-By>
							<Build-Jdk>${java.version}</Build-Jdk>
							<Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
							<Automatic-Module-Name>${Automatic-Module-Name}</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>steady</id>
			<activation>
				<property>
					<name>steady</name>
				</property>
			</activation>
			<properties>
				<vulas.version>3.2.5</vulas.version>
				<vulas.shared.backend.serviceUrl>http://steady.b00158319.com:8033/backend/</vulas.shared.backend.serviceUrl>
				<vulas.core.space.token>39414620282F14646F7F56CE124DB626</vulas.core.space.token>
				<vulas.core.appContext.group>${project.groupId}</vulas.core.appContext.group>
				<vulas.core.appContext.artifact>${project.artifactId}</vulas.core.appContext.artifact>
				<vulas.core.appContext.version>${project.version}</vulas.core.appContext.version>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.steady</groupId>
						<artifactId>plugin-maven</artifactId>
						<version>${vulas.version}</version>
						<configuration>
							<layeredConfiguration>
								<vulas.shared.backend.serviceUrl>${vulas.shared.backend.serviceUrl}</vulas.shared.backend.serviceUrl>
								<vulas.core.space.token>${vulas.core.space.token}</vulas.core.space.token>

								<vulas.core.appContext.group>${vulas.core.appContext.group}</vulas.core.appContext.group>
								<vulas.core.appContext.artifact>${vulas.core.appContext.artifact}</vulas.core.appContext.artifact>
								<vulas.core.appContext.version>${vulas.core.appContext.version}</vulas.core.appContext.version>

								<vulas.shared.tmpDir>${project.build.directory}/vulas/tmp</vulas.shared.tmpDir>
								<vulas.core.uploadDir>${project.build.directory}/vulas/upload</vulas.core.uploadDir>
								<vulas.core.app.sourceDir>${project.build.directory}/classes,${project.basedir}/src/main/java,${project.basedir}/src/main/python</vulas.core.app.sourceDir>

								<!-- steady:instr : Instruments JAR/WAR files found in source dir,
									and writes to target dir. Files in include dir are put into /WEB-INF/lib
									of output WARs. Files in lib dir are part of the class path when instrumenting. -->
								<vulas.core.instr.sourceDir>${project.build.directory}</vulas.core.instr.sourceDir>
								<vulas.core.instr.targetDir>${project.build.directory}/vulas/target</vulas.core.instr.targetDir>
								<vulas.core.instr.includeDir>${project.build.directory}/vulas/include</vulas.core.instr.includeDir>
								<vulas.core.instr.libDir>${project.build.directory}/vulas/lib</vulas.core.instr.libDir>
								<vulas.core.instr.writeCode>false</vulas.core.instr.writeCode>
								<vulas.core.instr.instrumentorsChoosen>org.eclipse.steady.java.monitor.trace.SingleTraceInstrumentor</vulas.core.instr.instrumentorsChoosen>
								<vulas.core.instr.searchRecursive>false</vulas.core.instr.searchRecursive>
								<vulas.core.monitor.periodicUpload.enabled>false</vulas.core.monitor.periodicUpload.enabled>
								<vulas.core.instr.maxStacktraces>10</vulas.core.instr.maxStacktraces>

								<!-- steady:a2c/t2c : Performs static call graph analysis -->
								<vulas.reach.wala.callgraph.reflection>NO_FLOW_TO_CASTS_NO_METHOD_INVOKE</vulas.reach.wala.callgraph.reflection>
								<vulas.reach.timeout>60</vulas.reach.timeout>

								<!-- steady:report -->
								<vulas.report.reportDir>${project.build.directory}/vulas/report</vulas.report.reportDir>
							</layeredConfiguration>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<distributionManagement>
				<snapshotRepository>
					<id>oss</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>oss</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
			<build>
				<plugins>
					<!-- Source -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.2.1</version>
						<executions>
							<execution>
								<id>oss</id>
								<phase>package</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- 测试覆盖度 -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>2.7</version>
						<configuration>
							<formats>
								<format>html</format>
								<format>xml</format>
							</formats>
							<check/>
						</configuration>
					</plugin>
					<!-- Gpg Signature -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>oss</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.8</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>oss</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
